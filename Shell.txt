¿Qué es un Shell?

El shell actúa como el puente entre usted y el núcleo de su máquina. El núcleo rige los recursos (memoria, procesador y disco) que cada proceso recibe y se asegura de que todo está funcionando como debería.

De ahí la importancia de que el Kernel (núcleo)funciona bien. Cuando no sucede las aplicaciones comienzan colapsar y el computador en general, empieza a hacer cosas raras. Es probable que haya tropezado con esta situación antes, incluso si usted no lo sabía en ese momento: los usuarios de Windows están familiarizados con la "pantalla azul de la muerte", mientras que los que hemos utilizado una de las varias encarnaciones de Mac OS X, probablemente hemos encontrado algunos errores de kernel muy específicos. 

Existen varios tipos de Shell, creados desde los 40, y todos ellos hacen el mismo trabajo, pero cada uno es único en las características que ofrece y la sintaxis que soporta.

cd "Change Directory"
ls "List of contents"
rm "Remove Files"

Con las flechas se puede navegar por los comandos digitados

Los comandos usuales son:

./configure
make
make check
make install
make install check
make clean

PATH=/home/<USERNAME>/mpich-install/bin:$PATH
/opt/local/bin/mpicc
source .bashrc

n Unix, what is my path, and how do I set or modify it?

Note: Only advanced users should attempt to edit their path. If you feel that you need to edit your path, but feel unsure of how to safely do it, consult your system administrator. If you are a student, faculty member, or staff member at Indiana University, you may also want to contact your class instructor or your department's computing support provider.

The PATH environment variable is a colon-delimited list of directories that your shell searches through when you enter a command.

Program files (executables) are kept in many different places on the Unix system. Your path tells the Unix shell where to look on the system when you request a particular program. Having more directories in your path will reduce the number of times you get "Command not found" errors, but might put you at greater risk of activating a Trojan horse.

To find out what your path is, at the Unix shell prompt, enter:

  echo $PATH
Your path will look something like the following.

  /usr2/username/bin:/usr/local/bin:/usr/bin:.
You will see your username in place of username. Using the above example path, if you enter the ls command, your shell will look for the appropriate executable file in the following order: first, it would look through the directory /usr2/username/bin, then /usr/local/bin, then /usr/bin, and finally the local directory, indicated by the  .  (a period).

To modify your path
If you are using csh or tcsh, at the shell prompt, enter:

  setenv PATH $PATH\:/dir/path
If you are using sh, ksh, or bash, at the shell prompt, enter:

  PATH=$PATH\:/dir/path ; export PATH
In all cases, replace /dir/path with the directory you want the shell to search.

Note: The earlier entries in the path take precedence over the later ones. If you want the directories you add to your path to take precedence, in the examples above, replace $PATH\:/dir/path with /dir/path:$PATH .

To make these changes permanent, add the commands described above to the end of your .cshrc file (for csh and tcsh), .profile file (for sh and ksh), or .bash_profile file (for bash).

UBUNTU:

nano ~/.bashrc

MAC:

Arriba en ~/.bash_profile
export BASH_CONF="bash_profile"

Abrí otra terminal y ejecuté:
$ echo $BASH_CONF

Con:

source
pico
vi
nno

Fuentes:
http://www.macdevcenter.com/pub/a/mac/2004/02/24/bash.html
http://coolestguidesontheplanet.com/add-shell-path-osx/
http://kb.iu.edu/data/acar.html
https://help.ubuntu.com/community/Beginners/BashScripting
¿Qué es un Shell?
Por Alejandro Cárdenas-Avendaño

El shell actúa como el puente entre usted y el núcleo de su máquina. El núcleo rige los recursos (memoria, procesador y disco) que cada proceso recibe y se asegura de que todo está funcionando como debería.

De ahí la importancia de que el Kernel (núcleo) funciona bien. Cuando no sucede, las aplicaciones comienzan colapsar y el computador en general, empieza a hacer cosas raras. Es probable que haya tropezado con esta situación antes, incluso si usted no lo sabía en ese momento: los usuarios de Windows están familiarizados con la "pantalla azul de la muerte", mientras que los que hemos utilizado una de las varias encarnaciones de Mac OS X, probablemente hemos encontrado algunos errores de kernel muy específicos. 

Existen varios tipos de Shell, creados desde los 40, y todos ellos hacen el mismo trabajo, pero cada uno es único en las características que ofrece y la sintaxis que soporta.

cd "Change Directory" Para cambiar de directorio
ls "List of contents" Para hacer una lista del contenido
rm "Remove Files" Para remover archivos

Con las flechas se puede navegar por los comandos digitados

Los comandos usuales son, por ejemplo para instalar sofwtware:

./configure
make
make check
make install
make install check
make clean

Y luego debe modificar el Path, por ejemplo:

PATH=/home/<USERNAME>/mpich-install/bin:$PATH
/opt/local/bin/mpicc
source .bashrc

Nota: Solamente cuando sepa qué está haciendo exactamente modifique el PATH. 

¿Qué es el PATH?

El ambiente de variables del PATH es una lista de directorios, separados con dos puntos (:), sobre los cuales siempre el Shell busca cuando se digita un comando en la terminal.

Lo programas, es decir ejecutables, se alojan de diferentes maneras en el sistema Unix (MAC y Linux ). El path simplemente almacena las rutas a esas ubicaciones específicas. Entre más direcciones se agreguen al PATH menos veces saldrán errores del tipo: "Command not found". Sin embargo, estas acciones siempre se deben hacer cuidadosamente. 

Para saber dónde está el PATH, desde desde una terminal se debe digitar:

echo $PATH 

El path será algo así:
/usr2/username/bin:/usr/local/bin:/usr/bin:.

En donde se verá el nombre de la máquina. Entonces si usted, por ejemplo digita el comando ls, el shell empezará a buscar esa instrucción en el siguiente orden 

/usr2/username/bin

luego en 

/usr/local/bin 

luego en 

/usr/bin 

y finalmente en la carpeta local, instrucción que se hace explícita en .  (un punto).

Para modificar el Path:

Si está usando csh o tcsh, desde la terminal digite:
setenv PATH $PATH\:/dir/path

Si está usando sh,ksh o bash, desde la terminal digite:
PATH=$PATH\:/dir/path ; export PATH

En todos los casos, reemplace /dir/path con el directorio deseado para la búsqueda del comando o archivo. 

Fíjese que las entradas anteriores en el path toman precedencia sobre las posteriores. Si usted quiere que los directorios que agrega tengan precedencia, en los ejemplos de arriba, reemplace $PATH\:/dir/path with /dir/path:$PATH .

Para hacer los cambios permanentes debe modificar el archivo que es cargado por la terminal, el cual puede ser un archivo .cshrc (para csh y tcsh), archivo .profile para (sh y ksh) o .bash_profile (para bash). 

UBUNTU:

nano ~/.bashrc

MAC:

pico ~/.bash_profile

En vez de nano o pico, funciona, dependiendo del editor instalado:

source
pico
vi
nno

_________________________
Nota opcional en algunos casos: 

export BASH_CONF="bash_profile"

Abrir otra terminal y ejecutar:
$ echo $BASH_CONF
_________________________

Fuentes:
http://www.macdevcenter.com/pub/a/mac/2004/02/24/bash.html
http://coolestguidesontheplanet.com/add-shell-path-osx/
http://kb.iu.edu/data/acar.html
https://help.ubuntu.com/community/Beginners/BashScripting